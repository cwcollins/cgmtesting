
import java.awt.Color;
import java.awt.Frame;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Timer;
import java.util.TimerTask;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainWindow.java
 *
 * Created on 27-Nov-2011, 9:47:41 PM
 */
/**
 *
 * @author Chet
 */
public class MainWindow extends javax.swing.JFrame {

    TestTypes types;
    TestController controller;
    KeyboardFocusManager manager;
    boolean keyboardTesting;
    int countdownTime;
    Color defaultColor;

    /** Creates new form MainWindow */
    public MainWindow() {
        types = new TestTypes();
        controller = new TestController(this);
        initComponents();
        this.setExtendedState(this.MAXIMIZED_BOTH);
        this.populateTestTypes();
        this.changeDisplay();
        this.setFocusable(true);
        this.requestFocus();
        this.addKeyListener(new TestKeyListener());
        defaultColor = startButton.getBackground();
    }

    public class TestKeyListener extends KeyAdapter {

        @Override
        public void keyPressed(KeyEvent e) {
            
            if(outputFile.isFocusOwner()) {
                return;
            }
            
            System.out.println("Key code: " + e.getKeyCode() + "modifiers: " + e.getModifiers());

            if (e.getKeyChar() == ' ') {
                setup();
                return;
            }

            if (keyboardTesting && controller.curTest != null) {
                if (e.getKeyCode() == 37 && e.getModifiers() == 8) {
                    controller.buttonPressed("Alt+Left");
                } else if (e.getKeyCode() == 39 && e.getModifiers() == 8) {
                    controller.buttonPressed("Alt+Right");
                } else if (e.getKeyCode() == 27) {
                    controller.buttonPressed("Esc");
                } else if (e.getKeyCode() == 84) {
                    controller.buttonPressed("T");
                } else if (e.getKeyCode() == 18 && e.getModifiers() == 8 ) {
                }
                else {
                    controller.buttonPressed("");
                }
            } else {
                System.out.println("Not listening");
            }

        }
    }

    private void populateTestTypes() {
        for (int i = 0; i < types.tests.length; i++) {
            testTypesBox.addItem(types.tests[i]);
        }
    }

    /**
     * Obtains the currently selected test
     * @return the currently selected test
     */
    public String getCurrentTest() {
        return types.tests[testTypesBox.getSelectedIndex()];
    }

    /**
     * Performs setup before the tests can begin
     */
    public void setup() {
        controller.setTestMode(testTypesBox.getSelectedIndex());
        controller.runTest(getCurrentTest());
        controller.startTimer();
        resetColor();
        
        String[] action = controller.keys;
        
        if(testTypesBox.getSelectedIndex() == 0) {
            action = controller.gestures;
        }
        else {
            action = controller.keys;
        }

        if (!keyboardTesting) {
            infoLabel.setText("Click the green button");
            switch (controller.selection) {
                case 0:
                    homeButton.setBackground(Color.green);
                    break;
                case 1:
                    backButton.setBackground(Color.green);
                    break;
                case 2:
                    fwdButton.setBackground(Color.green);
                    break;
                case 3:
                    quitButton.setBackground(Color.green);
                    break;
                default:
                    break;
            }
        } else {
            infoLabel.setText(action[controller.selection]);
        }
    }

    public void resetColor() {
        homeButton.setBackground(defaultColor);
        backButton.setBackground(defaultColor);
        fwdButton.setBackground(defaultColor);
        quitButton.setBackground(defaultColor);
        startButton.setBackground(defaultColor);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        testTypesBox = new javax.swing.JComboBox();
        outputFile = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        fwdButton = new javax.swing.JButton();
        infoLabel = new javax.swing.JLabel();
        quitButton = new javax.swing.JButton();
        bottomPanel = new javax.swing.JPanel();
        homeButton = new javax.swing.JButton();
        midPanel = new javax.swing.JPanel();
        startButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("cgmtesting");

        testTypesBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                testTypesBoxItemStateChanged(evt);
            }
        });

        jLabel1.setText("Output file:");

        backButton.setText("<--");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        fwdButton.setText("-->");
        fwdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fwdButtonActionPerformed(evt);
            }
        });

        infoLabel.setFont(new java.awt.Font("Courier New", 0, 36)); // NOI18N
        infoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        infoLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        quitButton.setText("X");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addComponent(backButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fwdButton))
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, topPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(outputFile))
                            .addComponent(testTypesBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 183, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 202, Short.MAX_VALUE)
                        .addComponent(quitButton)))
                .addContainerGap())
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addComponent(testTypesBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(outputFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backButton)
                            .addComponent(fwdButton)))
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(quitButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(topPanel, java.awt.BorderLayout.PAGE_START);

        homeButton.setText("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        bottomPanel.add(homeButton);

        getContentPane().add(bottomPanel, java.awt.BorderLayout.PAGE_END);

        startButton.setText("Click here to begin");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        midPanel.add(startButton);

        getContentPane().add(midPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void testTypesBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_testTypesBoxItemStateChanged
    // Change display based on what is selected
    changeDisplay();
    this.requestFocus();
}//GEN-LAST:event_testTypesBoxItemStateChanged

    /**
     * When the start button is clicked
     * @param evt the button click event
     */
private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
    // TODO add your handling code here:
    if (!keyboardTesting) {
        setup();
    }
    startButton.setBackground(defaultColor);
}//GEN-LAST:event_startButtonActionPerformed

    /**
     * When the back button is clicked - corresponds to value 1
     * @param evt 
     */
private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
    // TODO add your handling code here:
    controller.buttonPressed("Back");
    backButton.setBackground(defaultColor);
}//GEN-LAST:event_backButtonActionPerformed

    /**
     * When the fwd button is clicked - corresponds to value 2
     * @param evt 
     */
private void fwdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fwdButtonActionPerformed
    // TODO add your handling code here:
    controller.buttonPressed("Fwd");
    fwdButton.setBackground(defaultColor);
}//GEN-LAST:event_fwdButtonActionPerformed

    /**
     * When the home button is clicked - corresponds to value 0
     * @param evt 
     */
private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
    // TODO add your handling code here:
    controller.buttonPressed("Home");
    homeButton.setBackground(defaultColor);
}//GEN-LAST:event_homeButtonActionPerformed

    /**
     * When the quit button is clicked - corresponds to value 3
     * @param evt 
     */
private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
    // TODO add your handling code here:
    controller.buttonPressed("Quit");
    quitButton.setBackground(defaultColor);
}//GEN-LAST:event_quitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    public void changeLabel(String label) {
        infoLabel.setText(label);
    }

    public String getFileName() {
        return outputFile.getText();
    }

    /**
     * Change display based on combo box selection
     */
    public void changeDisplay() {
        int index = testTypesBox.getSelectedIndex();
        //System.out.println(index);
        if (index == 3) {
            showButtons();
            keyboardTesting = false;
        } else {
            hideButtons();
            keyboardTesting = true;
        }
    }

    /**
     * Hides all the buttons
     */
    public void hideButtons() {
        backButton.setVisible(false);
        fwdButton.setVisible(false);
        homeButton.setVisible(false);
        startButton.setVisible(false);
        quitButton.setVisible(false);
        infoLabel.setText("Press the space bar to begin");
    }

    /**
     * Shows all the buttons
     */
    public void showButtons() {
        backButton.setVisible(true);
        fwdButton.setVisible(true);
        homeButton.setVisible(true);
        startButton.setVisible(true);
        quitButton.setVisible(true);
        infoLabel.setText("Click the button to begin");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JButton fwdButton;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel midPanel;
    private javax.swing.JTextField outputFile;
    private javax.swing.JButton quitButton;
    private javax.swing.JButton startButton;
    private javax.swing.JComboBox testTypesBox;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables
}
